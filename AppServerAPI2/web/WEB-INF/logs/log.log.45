[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:21:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:22:00] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 14:22:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:22:01] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-58880-1499149321235-1:1,clientId=null,started=false} 
[INFO][2017-07-04 14:22:01] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 14:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 14:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 14:22:01] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3772 ms 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-04 14:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-04 14:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 14:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-04 14:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 14:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 14:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 14:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 14:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[WARN][2017-07-04 14:22:38] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[WARN][2017-07-04 14:22:38] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[WARN][2017-07-04 14:22:38] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[WARN][2017-07-04 14:22:38] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:23:39] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:21:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:23:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:23:39] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 14:23:39] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 14:21:55 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:23:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:23:52] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 14:23:52] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 14:23:52 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:23:52] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 14:23:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 14:23:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 14:23:53] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 14:23:55] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:23:55] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2888 ms 
[INFO][2017-07-04 14:23:55] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 14:23:55] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:23:55 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:23:55] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 14:23:56] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:23:57] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:23:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:23:55 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:23:58] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 14:23:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:23:58] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59013-1499149438750-1:1,clientId=null,started=false} 
[INFO][2017-07-04 14:23:58] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 14:23:59] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3922 ms 
[WARN][2017-07-04 14:24:29] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-04 14:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-04 14:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 14:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-04 14:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 14:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 14:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 14:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 14:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[WARN][2017-07-04 14:25:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[WARN][2017-07-04 14:25:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[WARN][2017-07-04 14:25:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[WARN][2017-07-04 14:25:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:25:57] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:23:55 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:25:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:25:57] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 14:25:57] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 14:23:52 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:25:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:26:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 14:26:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 14:26:11 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:26:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 14:26:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 14:26:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 14:26:11] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 14:26:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:26:13] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2740 ms 
[INFO][2017-07-04 14:26:13] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 14:26:13] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:26:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:26:13] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 14:26:15] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:26:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:26:16] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 14:26:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:26:17] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59139-1499149577040-1:1,clientId=null,started=false} 
[INFO][2017-07-04 14:26:17] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 14:26:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 14:26:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 14:26:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3773 ms 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-04 14:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 14:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-04 14:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 14:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 14:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 14:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.getStoresGoodsClass: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id 
[INFO][2017-07-04 14:26:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-04 14:26:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[WARN][2017-07-04 14:26:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[WARN][2017-07-04 14:27:03] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 16 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 14:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 14:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-04 14:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-04 14:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-04 14:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 14:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 16 and 17 
[INFO][2017-07-04 14:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 14:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:53:53] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:26:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:53:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:53:54] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 14:53:54] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 14:26:11 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:53:54] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:54:08] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 14:54:08] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 14:54:08 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:54:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 14:54:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 14:54:09] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 14:54:09] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 14:54:11] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:54:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 2948 ms 
[INFO][2017-07-04 14:54:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 14:54:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:54:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:54:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 14:54:13] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:54:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:54:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:54:14] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 14:54:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:54:14] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59914-1499151254724-1:1,clientId=null,started=false} 
[INFO][2017-07-04 14:54:14] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 14:54:15] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 4005 ms 
[WARN][2017-07-04 14:54:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 14:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-04 14:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 14:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 14:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 14:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 14:54:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:54:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:0
 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
 
[INFO][2017-07-04 14:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 14:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 14:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 14:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 14:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 14:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-04 14:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 14:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 14:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 14:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:0
 
[INFO][2017-07-04 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 14:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:0
 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:0
 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:0
 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:0
 
[INFO][2017-07-04 14:57:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 14:57:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:57:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 14:57:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-04 14:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
 
[INFO][2017-07-04 14:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 14:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 14:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 14:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 14:57:46] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:54:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:57:46] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:57:47] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 14:57:47] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 14:54:08 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:57:47] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 14:58:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 14:58:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 14:58:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 14:58:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 14:58:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 14:58:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 14:58:01] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 14:58:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:58:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2748 ms 
[INFO][2017-07-04 14:58:03] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 14:58:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:58:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:58:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 14:58:04] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 14:58:05] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 14:58:06] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:58:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 14:58:06] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 14:58:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 14:58:06] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-60331-1499151486462-1:1,clientId=null,started=false} 
[INFO][2017-07-04 14:58:06] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 14:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 14:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 14:58:07] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3580 ms 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:378
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:382
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-04 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-04 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-04 15:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 15:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 15:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 15:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:0
参数2:0
 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
参数2:0
 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
参数2:0
 
[INFO][2017-07-04 15:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:0
参数2:0
 
[INFO][2017-07-04 15:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:0
参数2:0
 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
参数2:0
 
[INFO][2017-07-04 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
参数2:0
 
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:02:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 14:58:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:02:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:02:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 15:02:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 14:58:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:02:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:02:36] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 15:02:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 15:02:36 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:02:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 15:02:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 15:02:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 15:02:36] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 15:02:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:02:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2834 ms 
[INFO][2017-07-04 15:02:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 15:02:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:02:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:02:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 15:02:40] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:02:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:02:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:02:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:02:41] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 15:02:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:02:41] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-60853-1499151761717-1:1,clientId=null,started=false} 
[INFO][2017-07-04 15:02:41] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 15:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 15:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 15:02:42] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3404 ms 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-04 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 15:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:0
参数2:0
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
参数2:0
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
参数2:0
 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
参数2:0
 
[INFO][2017-07-04 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:0
参数2:0
 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:0
参数2:0
 
[INFO][2017-07-04 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
参数2:0
 
[INFO][2017-07-04 15:07:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:07:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:07:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:07:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:08:07] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:02:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:08:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:08:08] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 15:08:08] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 15:02:36 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:08:08] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:08:21] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 15:08:21] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 15:08:21 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:08:21] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 15:08:21] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 15:08:21] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 15:08:21] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 15:08:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:08:23] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2774 ms 
[INFO][2017-07-04 15:08:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 15:08:23] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:08:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:08:23] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 15:08:25] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:08:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:08:26] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:08:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:08:26] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 15:08:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:08:26] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-60969-1499152106752-1:1,clientId=null,started=false} 
[INFO][2017-07-04 15:08:26] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 15:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 15:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 15:08:27] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3521 ms 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-04 15:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 15:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 15:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 15:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 15:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
参数2:0
 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:0
参数2:0
 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:0
参数2:0
 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:09:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:09:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:0
参数2:0
 
[INFO][2017-07-04 15:10:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:10:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:10:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:10:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
参数2:0
 
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:11:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
参数2:0
 
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:0
参数2:0
 
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:0
参数2:0
 
[INFO][2017-07-04 15:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:12:13] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:08:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:12:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:12:14] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 15:12:14] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 15:08:21 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:12:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:12:50] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 15:12:50] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 15:12:50 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:12:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 15:12:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 15:12:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 15:12:50] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 15:12:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:12:53] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2754 ms 
[INFO][2017-07-04 15:12:53] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 15:12:53] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:12:53 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:12:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 15:12:54] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 15:12:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:12:53 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:12:55] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 15:12:55] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:12:55] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-61134-1499152375884-1:1,clientId=null,started=false} 
[INFO][2017-07-04 15:12:56] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 15:12:56] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3468 ms 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 15:13:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-04 15:13:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 15:13:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 15:13:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 15:13:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[WARN][2017-07-04 15:13:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:13:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:13:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[WARN][2017-07-04 15:13:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-04 15:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
 
[INFO][2017-07-04 15:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:14:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-04 15:14:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[WARN][2017-07-04 15:14:52] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:14:52] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[WARN][2017-07-04 15:15:12] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[WARN][2017-07-04 15:15:12] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:12] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:12] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[WARN][2017-07-04 15:15:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[WARN][2017-07-04 15:15:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-04 15:15:26] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[WARN][2017-07-04 15:15:26] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:26] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:26] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[WARN][2017-07-04 15:15:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[WARN][2017-07-04 15:15:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-04 15:15:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[WARN][2017-07-04 15:15:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "''" 
[INFO][2017-07-04 15:41:56] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:12:53 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:41:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:41:57] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 15:41:58] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 15:12:50 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:41:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 15:42:10] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 15:42:10] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 15:42:10 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 15:42:10] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 15:42:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 15:42:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 15:42:11] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 15:42:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:42:13] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3303 ms 
[INFO][2017-07-04 15:42:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 15:42:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:42:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:42:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 15:42:15] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 15:42:15] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 15:42:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:42:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 15:42:16] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 15:42:16] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 15:42:16] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-61547-1499154136713-1:1,clientId=null,started=false} 
[INFO][2017-07-04 15:42:16] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 15:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 15:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 15:42:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3478 ms 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:chenbin
 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:351
参数2:1032
 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:352
参数2:1032
 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:376
参数2:1032
 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:378
参数2:1032
 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:382
参数2:1032
 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:353
参数2:1032
 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:372
参数2:1032
 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:354
参数2:1032
 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:355
参数2:1032
 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:356
参数2:1032
 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 15:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-04 15:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 15:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 15:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 15:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 15:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 15:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-04 15:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-04 15:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:10
 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[WARN][2017-07-04 15:56:44] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 15:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:19
 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:18
 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[WARN][2017-07-04 15:56:50] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:16
 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[WARN][2017-07-04 15:56:52] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:18
 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[WARN][2017-07-04 15:56:55] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:19
 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:19
 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:10
 
[INFO][2017-07-04 15:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[WARN][2017-07-04 15:57:05] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[WARN][2017-07-04 15:57:11] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:13
 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:13
 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:13
 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[WARN][2017-07-04 15:57:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:57:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:57:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:11
 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[WARN][2017-07-04 15:57:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:10
 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-04 15:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[WARN][2017-07-04 15:57:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[WARN][2017-07-04 15:57:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 15:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:16
 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[WARN][2017-07-04 15:57:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 15:58:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:58:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 15:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 15:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 15:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 15:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 15:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:16
 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:16
 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 15:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:16
 
[INFO][2017-07-04 15:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 15:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[WARN][2017-07-04 15:58:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-04 16:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:16
 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[WARN][2017-07-04 16:00:26] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[WARN][2017-07-04 16:02:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-04 16:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[WARN][2017-07-04 16:02:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[WARN][2017-07-04 16:04:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:04:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:04:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:04:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-04 16:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:16
 
[WARN][2017-07-04 16:15:35] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@61548 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, attempting to automatically reconnect 
[INFO][2017-07-04 16:15:35] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1042) ActiveMQ Task-3 Successfully reconnected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[WARN][2017-07-04 16:15:35] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:15:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-04 16:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227546890
 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 16:15:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227537241
 
[INFO][2017-07-04 16:15:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 16:15:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227537242
 
[INFO][2017-07-04 16:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:16
 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:16
 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:16
 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[WARN][2017-07-04 16:16:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:24:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 16:24:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:16
 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[WARN][2017-07-04 16:25:01] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:16
 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:16
 
[INFO][2017-07-04 16:25:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:25:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[WARN][2017-07-04 16:25:44] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 16:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 16:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 16:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 16:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 16:30:34] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 15:42:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 16:30:34] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 16:30:35] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 16:30:35] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 15:42:10 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 16:30:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 16:30:48] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 16:30:48] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 16:30:48 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 16:30:48] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 16:30:48] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 16:30:48] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 16:30:49] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 16:30:51] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 16:30:51] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2718 ms 
[INFO][2017-07-04 16:30:51] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 16:30:51] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 16:30:51 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 16:30:51] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 16:30:52] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:52] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 16:30:51 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 16:30:53] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 16:30:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 16:30:53] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-63023-1499157053883-1:1,clientId=null,started=false} 
[INFO][2017-07-04 16:30:54] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 16:30:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 16:30:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 16:30:54] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3282 ms 
[INFO][2017-07-04 16:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 16:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 16:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-04 16:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 16:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 16:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 16:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:32:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:32:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:32:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:32:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:32:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-04 16:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 16:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:33:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:33:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:33:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:33:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 16:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-04 16:38:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 16:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-04 16:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-04 16:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-04 16:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-04 16:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-04 16:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 16:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-04 16:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-04 16:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 16:43:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 16:43:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 16:43:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:43:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 16:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 16:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:9
 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:25
 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:10
 
[WARN][2017-07-04 16:44:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:10
 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:10
 
[WARN][2017-07-04 16:44:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:10
 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
参数2:12
 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:12
 
[INFO][2017-07-04 16:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 16:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:12
 
[INFO][2017-07-04 16:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:27
 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:378
参数2:1032
 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:382
参数2:1032
 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:9
 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 16:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 16:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 16:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 16:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 16:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 16:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 16:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-04 17:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 17:10:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-04 17:10:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3352
 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:1295
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:350.0
参数12:3500.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3352
 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3353
 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3353
 
[INFO][2017-07-04 17:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:12:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:12:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:12:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:12:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:30
 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 17:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1227280992
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1227546890
 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1227537241
 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1227537242
 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (42,47,46,45,44,43))  tmp_count 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (42,47,46,45,44,43)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:14:12] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 16:30:51 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 17:14:12] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 17:14:13] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 17:14:13] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 16:30:48 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 17:14:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 17:14:29] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 17:14:29] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 17:14:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 17:14:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 17:14:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 17:14:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 17:14:29] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 17:14:31] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 17:14:31] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 2589 ms 
[INFO][2017-07-04 17:14:31] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 17:14:31] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 17:14:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 17:14:31] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 17:14:33] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 17:14:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 17:14:34] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 17:14:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 17:14:34] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 17:14:34] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 17:14:34] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-63974-1499159674673-1:1,clientId=null,started=false} 
[INFO][2017-07-04 17:14:34] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 17:14:35] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3473 ms 
[INFO][2017-07-04 17:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 17:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:378
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:382
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:16:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 17:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:9
 
[INFO][2017-07-04 17:17:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 17:17:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 17:17:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 17:17:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 17:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:30
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:18:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:18:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:30
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:30
 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-04 17:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-04 17:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3353
 
[INFO][2017-07-04 17:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:个
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3353
 
[INFO][2017-07-04 17:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
参数2:10
 
[WARN][2017-07-04 17:22:37] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-04 17:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:22:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:22:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1227280992
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1227546890
 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1227537241
 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:23:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1227537242
 
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:24:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:24:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:24:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:24:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:24:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:30
 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:24:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:25:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:25:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:25:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:25:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
 
[INFO][2017-07-04 17:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227280992
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227546890
 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537241
 
[INFO][2017-07-04 17:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537242
 
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:29:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:29:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:29:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:29:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 17:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 17:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:30:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:30:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:30:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3352
 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288))  tmp_count 
[INFO][2017-07-04 17:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:30
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288))  tmp_count 
[INFO][2017-07-04 17:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288))  tmp_count 
[INFO][2017-07-04 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227280992
 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227546890
 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227537241
 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227537242
 
[WARN][2017-07-04 17:32:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-04 17:33:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:
 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:33:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-04 17:33:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:
 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:9001
 
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:9001
 
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:33:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:
 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:34:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:34:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288))  tmp_count 
[INFO][2017-07-04 17:34:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:34:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:34:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3351
 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288))  tmp_count 
[INFO][2017-07-04 17:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1288)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289))  tmp_count 
[INFO][2017-07-04 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289))  tmp_count 
[INFO][2017-07-04 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 17:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-04 17:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-04 17:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 17:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 17:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289))  tmp_count 
[INFO][2017-07-04 17:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:私厨直播
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227280992
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:热销菜22
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227546890
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537241
 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:43:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537242
 
[INFO][2017-07-04 17:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289))  tmp_count 
[INFO][2017-07-04 17:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289))  tmp_count 
[INFO][2017-07-04 17:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:1290
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:300.0
参数12:3000.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:1291
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:250.0
参数12:2500.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:1295
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:350.0
参数12:3500.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-04 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3353
 
[INFO][2017-07-04 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3354
 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3355
 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289,1290,1291,1295))  tmp_count 
[INFO][2017-07-04 17:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1288,1289,1290,1291,1295) 
[INFO][2017-07-04 17:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 17:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 17:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
参数2:20
 
[INFO][2017-07-04 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
参数2:20
 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
参数2:20
 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:28
 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:20
参数2:1
 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
参数2:20
参数3:29
 
[INFO][2017-07-04 17:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
参数2:20
参数3:29
 
[INFO][2017-07-04 17:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
参数2:20
参数3:30
 
[INFO][2017-07-04 17:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
参数2:20
参数3:30
 
[INFO][2017-07-04 17:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
参数2:20
参数3:33
 
[INFO][2017-07-04 17:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
参数2:20
参数3:33
 
[INFO][2017-07-04 17:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
参数2:20
参数3:34
 
[INFO][2017-07-04 17:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
参数2:20
参数3:34
 
[INFO][2017-07-04 17:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
参数2:19
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
参数2:19
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
参数2:19
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:19
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:19
参数2:1
 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-04 17:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-04 17:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-04 17:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-04 17:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
参数2:12
 
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
参数2:12
 
[INFO][2017-07-04 17:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
参数2:12
 
[INFO][2017-07-04 17:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:27
 
[INFO][2017-07-04 17:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 17:49:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:49:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:49:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:49:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-04 17:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3357
 
[INFO][2017-07-04 17:49:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:49:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:12
参数2:1295
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:350.0
参数12:3500.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3357
 
[INFO][2017-07-04 17:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-04 17:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3356
 
[INFO][2017-07-04 17:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:1291
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:250.0
参数12:2500.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3356
 
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:50:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-04 17:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-04 17:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:51:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:51:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:27
 
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-04 17:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-04 17:51:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
参数2:12
 
[INFO][2017-07-04 17:51:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:51:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:27
 
[INFO][2017-07-04 17:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:51:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:51:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:51:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:51:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:51:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 17:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-04 17:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 17:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
参数2:15
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:新品上新（含米饭）
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511883855
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
参数2:15
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:菜大师公告
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511885898
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:美味套餐（含米饭）
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511887708
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:精致小炒（含米饭）
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:513406866
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:营养靓汤（不含米饭）
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:513651787
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:另加米饭
 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511884878
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:美味小吃
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511888330
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:饮料（单点不外送哦）
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1227479842
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:私厨直播
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:515065613
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:何谓大师
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511887699
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:15
参数2:回收站
 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-04 17:54:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:511870383
 
[INFO][2017-07-04 17:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:30
 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 17:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 17:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 17:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 17:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 17:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 17:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 17:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295))  tmp_count 
[INFO][2017-07-04 17:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:55:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 17:55:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:1290
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:300.0
参数12:3000.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-04 17:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 17:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288,1289,1290))  tmp_count 
[INFO][2017-07-04 17:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1291,1295,1288,1289,1290) 
[INFO][2017-07-04 17:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 17:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 17:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3356
 
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 17:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 17:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 18:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1295,1288,1289,1290))  tmp_count 
[INFO][2017-07-04 18:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 18:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1295,1288,1289,1290)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 18:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1295,1288,1289,1290))  tmp_count 
[INFO][2017-07-04 18:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 18:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1295,1288,1289,1290)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 18:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-04 18:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-04 18:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 18:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 18:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-04 18:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-04 18:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-04 18:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 18:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 18:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-04 18:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 18:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3357
 
[INFO][2017-07-04 18:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 18:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 18:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 18:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3358
 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:30
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 18:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1290))  tmp_count 
[INFO][2017-07-04 18:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1290)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-04 18:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:21:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 17:14:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 18:21:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 18:21:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 18:21:24] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 17:14:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 18:21:24] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 18:21:36] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-04 18:21:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Tue Jul 04 18:21:36 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 18:21:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-04 18:21:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-04 18:21:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-04 18:21:36] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-04 18:21:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 18:21:39] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2836 ms 
[INFO][2017-07-04 18:21:39] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-04 18:21:39] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 18:21:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 18:21:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-04 18:21:40] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-04 18:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 18:21:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 18:21:41] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-04 18:21:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-04 18:21:42] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-64865-1499163701907-1:1,clientId=null,started=false} 
[INFO][2017-07-04 18:21:42] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-04 18:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-04 18:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-04 18:21:42] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3507 ms 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:382
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-04 18:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-04 18:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 18:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9
 
[INFO][2017-07-04 18:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 18:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 18:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 18:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:22:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:22:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:22:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:22:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:22:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:22:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:22:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-04
参数3:2017-07-04
参数4:9
参数5:2017-07-04
参数6:2017-07-04
参数7:9
参数8:2017-07-04
参数9:2017-07-04
参数10:9
参数11:2017-07-04
参数12:2017-07-04
参数13:9
参数14:2017-07-04
参数15:2017-07-04
参数16:9
参数17:2017-07-04
参数18:2017-07-04
 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-04 18:23:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-04
参数2:2017-07-04
参数3:9
参数4:2017-07-03
参数5:2017-07-03
参数6:9
参数7:2017-06-27
参数8:2017-06-27
参数9:9
 
[INFO][2017-07-04 18:23:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 18:23:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:23:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:23:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 18:23:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:23:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 18:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-04 18:23:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:23:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-04 18:23:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:23:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9001
 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9001
 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:24:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-04 18:24:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:24:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:24:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-04 18:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:24:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 18:24:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,)  tmp_count 
[INFO][2017-07-04 18:24:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-04 18:24:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-80-exec-3 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-07-04 18:24:18] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-80-exec-3 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-07-04 18:24:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_stores.xml]
### The error may involve cds_stores.GetGoodsInfoLists-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [102]; “)”附近有语法错误。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3359
 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:30
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-04 18:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,)  tmp_count 
[INFO][2017-07-04 18:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[WARN][2017-07-04 18:24:44] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_stores.xml]
### The error may involve cds_stores.GetGoodsInfoLists-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [102]; “)”附近有语法错误。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。 
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:30
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-04 18:26:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,)  tmp_count 
[INFO][2017-07-04 18:26:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[WARN][2017-07-04 18:26:31] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_stores.xml]
### The error may involve cds_stores.GetGoodsInfoLists-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [102]; “)”附近有语法错误。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: “)”附近有语法错误。 
[INFO][2017-07-04 18:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-04 18:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-04 18:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-04 18:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-04 18:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-04 18:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-04 18:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-04 18:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-04 18:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-04 18:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 18:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-04 18:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-04 18:27:35] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jul 04 18:21:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-04 18:27:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-04 18:27:36] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-04 18:27:36] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Tue Jul 04 18:21:36 CST 2017]; root of context hierarchy 
[INFO][2017-07-04 18:27:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 09:05:31] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(2)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-05 09:05:32] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(2)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jul 05 09:05:32 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 09:05:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(2)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-05 09:05:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(2)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-05 09:05:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(2)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-05 09:05:32] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(2)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-05 09:05:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(2)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:05:35] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(2)-127.0.0.1 Root WebApplicationContext: initialization completed in 3424 ms 
[INFO][2017-07-05 09:05:35] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(2)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-05 09:05:35] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(2)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:05:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:05:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(2)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-05 09:05:36] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(2)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:05:37] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(2)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:05:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(2)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:05:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:05:38] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(2)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-05 09:05:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(2)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:05:38] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(2)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49846-1499216738638-1:1,clientId=null,started=false} 
[INFO][2017-07-05 09:05:38] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-05 09:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(2)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-05 09:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(2)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-05 09:05:39] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(2)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 4268 ms 
[INFO][2017-07-05 09:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 09:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:382
参数2:1032
 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 09:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 09:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:08:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:08:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:08:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 09:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 09:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:09:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[WARN][2017-07-05 09:09:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-05 09:27:21] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:05:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:27:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 09:27:22] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-05 09:27:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Jul 05 09:05:32 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 09:27:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 09:27:37] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(12)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-05 09:27:37] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(12)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jul 05 09:27:37 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 09:27:37] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(12)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-05 09:27:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(12)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-05 09:27:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(12)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-05 09:27:38] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(12)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-05 09:27:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(12)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:27:41] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(12)-127.0.0.1 Root WebApplicationContext: initialization completed in 3325 ms 
[INFO][2017-07-05 09:27:41] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(12)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-05 09:27:41] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(12)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:27:41] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(12)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-05 09:27:42] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(12)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:27:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(12)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:27:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(12)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:27:43] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(12)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-05 09:27:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(12)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:27:43] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(12)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50662-1499218063814-1:1,clientId=null,started=false} 
[INFO][2017-07-05 09:27:44] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-05 09:27:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(12)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-05 09:27:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(12)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-05 09:27:44] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(12)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3381 ms 
[INFO][2017-07-05 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:378
参数2:1032
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:382
参数2:1032
 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 09:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-05 09:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 09:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 09:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 09:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 09:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:28:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:31:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:31:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:31:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:31:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:34:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:41
 
[INFO][2017-07-05 09:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:41
 
[INFO][2017-07-05 09:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:42
 
[INFO][2017-07-05 09:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:42
 
[INFO][2017-07-05 09:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:43
 
[INFO][2017-07-05 09:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:43
 
[INFO][2017-07-05 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:44
 
[INFO][2017-07-05 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:44
 
[INFO][2017-07-05 09:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:45
 
[INFO][2017-07-05 09:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:45
 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:46
 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:46
 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 09:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:48
 
[INFO][2017-07-05 09:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:48
 
[INFO][2017-07-05 09:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:47
 
[INFO][2017-07-05 09:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:47
 
[INFO][2017-07-05 09:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:46
 
[INFO][2017-07-05 09:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:46
 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:45
 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:45
 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:44
 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:44
 
[INFO][2017-07-05 09:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:48
 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:48
 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:46
 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:46
 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:45
 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:45
 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:44
 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:44
 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:43
 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:43
 
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 09:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:37:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:37:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:37:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:37:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:41
 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:41
 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:42
 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:42
 
[INFO][2017-07-05 09:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:48
 
[INFO][2017-07-05 09:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:48
 
[INFO][2017-07-05 09:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:47
 
[INFO][2017-07-05 09:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:47
 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:46
 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:46
 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:44
 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:44
 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:43
 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:43
 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:42
 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:42
 
[INFO][2017-07-05 09:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:41
 
[INFO][2017-07-05 09:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:41
 
[INFO][2017-07-05 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:46:28] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:46:28] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 09:46:29] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-05 09:46:29] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Jul 05 09:27:37 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 09:46:29] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 09:46:44] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-05 09:46:44] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jul 05 09:46:44 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 09:46:44] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-05 09:46:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-05 09:46:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-05 09:46:45] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-05 09:46:47] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:46:47] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2834 ms 
[INFO][2017-07-05 09:46:47] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-05 09:46:47] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:46:47 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:46:47] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-05 09:46:49] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 09:46:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 09:46:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:46:47 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 09:46:50] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-05 09:46:50] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 09:46:50] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51571-1499219210414-1:1,clientId=null,started=false} 
[INFO][2017-07-05 09:46:50] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-05 09:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-05 09:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-05 09:46:51] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3342 ms 
[WARN][2017-07-05 09:47:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-05 09:47:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 09:47:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-05 09:47:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 09:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-05 09:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 09:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 09:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 09:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-05 09:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-05 09:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-05 09:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-05 09:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:48
 
[INFO][2017-07-05 09:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:48
 
[INFO][2017-07-05 09:48:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:47
 
[INFO][2017-07-05 09:48:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:47
 
[INFO][2017-07-05 09:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:46
 
[INFO][2017-07-05 09:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:46
 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:45
 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:45
 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:44
 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:44
 
[INFO][2017-07-05 09:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:42
 
[INFO][2017-07-05 09:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:42
 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:41
 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:41
 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:40
 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:40
 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:39
 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:39
 
[INFO][2017-07-05 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:40
 
[INFO][2017-07-05 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:40
 
[INFO][2017-07-05 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:39
 
[INFO][2017-07-05 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:39
 
[INFO][2017-07-05 09:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:38
 
[INFO][2017-07-05 09:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:38
 
[INFO][2017-07-05 09:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:37
 
[INFO][2017-07-05 09:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:37
 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:35
 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:35
 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:34
 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:34
 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:33
 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:33
 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:31
 
[INFO][2017-07-05 09:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:31
 
[INFO][2017-07-05 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:24
 
[INFO][2017-07-05 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:24
 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:48:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-05 09:49:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:49:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:49:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:49:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:49:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[WARN][2017-07-05 09:51:01] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:25
 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
参数3:42
 
[INFO][2017-07-05 09:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 09:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 09:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:51:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:51:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:24
 
[INFO][2017-07-05 09:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:24
 
[INFO][2017-07-05 09:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:29
 
[INFO][2017-07-05 09:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:29
 
[INFO][2017-07-05 09:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-05 09:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-05 09:51:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:51:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:31
 
[INFO][2017-07-05 09:51:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:51:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:31
 
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:48
 
[INFO][2017-07-05 09:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:48
 
[INFO][2017-07-05 09:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:43
 
[INFO][2017-07-05 09:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:43
 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[WARN][2017-07-05 09:57:30] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:10
 
[WARN][2017-07-05 09:57:32] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
参数2:9
 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:25
 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:57:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 09:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 09:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 09:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 09:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290,1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1290,1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_goods_list
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3360
 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 09:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 09:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:58:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 09:58:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3361
 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:1
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3361
 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:2
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3361
 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:1
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:58:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:58:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:58:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:58:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:58:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3361
 
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:2
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3361
 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:1
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 09:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:48
 
[INFO][2017-07-05 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:48
 
[INFO][2017-07-05 09:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 09:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 09:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-05 09:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 09:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 09:59:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 09:59:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 09:59:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 09:59:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:48
 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:48
 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-05 10:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:46
 
[INFO][2017-07-05 10:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:46
 
[INFO][2017-07-05 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:43
 
[INFO][2017-07-05 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:43
 
[INFO][2017-07-05 10:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:24
 
[INFO][2017-07-05 10:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:24
 
[INFO][2017-07-05 10:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:40
 
[INFO][2017-07-05 10:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:40
 
[INFO][2017-07-05 10:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:42
 
[INFO][2017-07-05 10:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:42
 
[INFO][2017-07-05 10:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:40
 
[INFO][2017-07-05 10:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:40
 
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-05 10:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 10:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227280992
 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227546890
 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227537241
 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227537242
 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (42,47,46,45,44,43))  tmp_count 
[INFO][2017-07-05 10:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 10:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (42,47,46,45,44,43)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:41
参数3:null
参数4:null
参数5:1
参数6:null
 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:48
参数3:null
参数4:null
参数5:1
参数6:null
 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 10:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42))  tmp_count 
[INFO][2017-07-05 10:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-05 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-05 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:04:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:04:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-05 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:382
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9
 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:30
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 10:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-05 10:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_goods_list(
          
            stores_id
         , 
            good_id
         , 
            brand_id
         , 
            good_number
         , 
            type
         , 
            elem_count
         , 
            mt_count
         , 
            wx_count
         , 
            box_count
         , 
            status
         , 
            box_price
         , 
            market_price
         , 
            unit
         , 
            default_standrad_id
         , 
            isdefault
         , 
            all_count
         , 
            stores_brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:1290
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:300.0
参数12:3000.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 10:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:48
 
[INFO][2017-07-05 10:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:48
 
[INFO][2017-07-05 10:05:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:05:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 10:05:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:05:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:41
 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:41
 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:43
 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:07:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:43
 
[INFO][2017-07-05 10:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:45
 
[INFO][2017-07-05 10:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:45
 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:46
 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:46
 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:47
 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:47
 
[INFO][2017-07-05 10:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:48
 
[INFO][2017-07-05 10:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:48
 
[INFO][2017-07-05 10:07:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:07:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:07:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:07:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:30
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:11:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:11:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:11:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:11:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:30
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:12:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:12:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 10:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
参数2:10
 
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
参数2:10
 
[WARN][2017-07-05 10:28:48] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2 
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-05 10:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-05 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-05 10:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-05 10:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:29:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-05 10:30:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 10:30:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:41
 
[INFO][2017-07-05 10:30:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
参数3:41
 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:48
 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
参数3:48
 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
参数3:47
 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
参数3:46
 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
参数3:45
 
[INFO][2017-07-05 10:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 10:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ) 
[INFO][2017-07-05 10:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
参数3:44
 
[INFO][2017-07-05 10:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 10:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
参数3:43
 
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48))  tmp_count 
[INFO][2017-07-05 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1289,1288,1290)
                
            
            
                
                     and c.class_id in (43,44,45,46,47,42,41,48)) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-05 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[WARN][2017-07-05 10:31:20] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-05 10:31:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-05 10:31:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-05 10:31:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-05 10:31:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-05 10:31:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227280992
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227546890
 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537241
 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1227537242
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1227280992
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1227546890
 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1227537241
 
[INFO][2017-07-05 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1227537242
 
[INFO][2017-07-05 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (48,41,42,47,46,45,44,43))  tmp_count 
[INFO][2017-07-05 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (48,41,42,47,46,45,44,43) 
[INFO][2017-07-05 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.deleteClass: 
delete from cds_stores_class  where stores_class_id=? 
[INFO][2017-07-05 10:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:23
 
[INFO][2017-07-05 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-05 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1227280992
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1227546890
 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:32:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1227537241
 
[INFO][2017-07-05 10:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1227537242
 
[INFO][2017-07-05 10:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (48,42,47,46,45,44,43))  tmp_count 
[INFO][2017-07-05 10:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (48,42,47,46,45,44,43)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-05 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:32:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-05 10:32:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:30
参数2:41
参数3:null
参数4:null
参数5:1
参数6:null
 
[INFO][2017-07-05 10:32:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:32:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:32:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:32:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (41,48,42,47,46,45,44,43))  tmp_count 
[INFO][2017-07-05 10:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetClassList: 
select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (41,48,42,47,46,45,44,43) 
[INFO][2017-07-05 10:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:41:28] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 09:46:47 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 10:41:28] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 10:41:29] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-05 10:41:29] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Jul 05 09:46:44 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 10:41:29] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 10:41:42] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-05 10:41:43] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jul 05 10:41:43 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 10:41:43] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-05 10:41:43] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-05 10:41:43] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-05 10:41:43] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-05 10:41:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 10:41:45] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2767 ms 
[INFO][2017-07-05 10:41:45] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-05 10:41:45] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 10:41:45 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 10:41:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-05 10:41:47] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 10:41:45 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 10:41:48] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-05 10:41:49] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 10:41:49] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53210-1499222509036-1:1,clientId=null,started=false} 
[INFO][2017-07-05 10:41:49] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-05 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-05 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-05 10:41:49] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3905 ms 
[INFO][2017-07-05 10:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 10:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-07-05 10:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 10:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:9
 
[INFO][2017-07-05 10:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 10:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 10:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 10:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 10:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:30
 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-05 10:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 10:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-05 10:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 10:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:42:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227280992
 
[INFO][2017-07-05 10:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227546890
 
[INFO][2017-07-05 10:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227537241
 
[INFO][2017-07-05 10:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1227537242
 
[INFO][2017-07-05 10:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1227280992
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1227546890
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1227537241
 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1227537242
 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3362
 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:1288
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:1.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3362
 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3361
 
[INFO][2017-07-05 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:1289
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:1
参数11:2.0
参数12:30.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3361
 
[INFO][2017-07-05 10:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3363
 
[INFO][2017-07-05 10:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-05 10:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:1290
参数3:3
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:1
参数10:0
参数11:300.0
参数12:3000.0
参数13:
参数14:0
参数15:null
参数16:0
参数17:30
参数18:3363
 
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:
 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 10:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
参数2:私厨直播
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1227280992
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:30
参数2:热销菜22
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1227546890
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1227537241
 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 10:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1227537242
 
[INFO][2017-07-05 11:03:51] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 10:41:45 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 11:03:51] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 11:03:52] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-05 11:03:52] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Jul 05 10:41:43 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 11:03:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-05 11:04:04] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-05 11:04:05] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jul 05 11:04:05 CST 2017]; root of context hierarchy 
[INFO][2017-07-05 11:04:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-05 11:04:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-05 11:04:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-05 11:04:05] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-05 11:04:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 11:04:07] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2781 ms 
[INFO][2017-07-05 11:04:07] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-05 11:04:07] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 11:04:07 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 11:04:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-05 11:04:09] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-05 11:04:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-05 11:04:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jul 05 11:04:07 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-05 11:04:10] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-05 11:04:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-05 11:04:10] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53509-1499223850448-1:1,clientId=null,started=false} 
[INFO][2017-07-05 11:04:10] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-05 11:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-05 11:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-05 11:04:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3367 ms 
[INFO][2017-07-05 11:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 11:04:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:382
参数2:1032
 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 11:04:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:9
 
[INFO][2017-07-05 11:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 11:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 11:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 11:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 11:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-05 11:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[WARN][2017-07-05 11:04:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.alibaba.fastjson.JSONException: syntax error, pos 1, json : <h1>Not Found</h1><p>The requested URL /restaurant/&#39;156059353&#39;/food_categories/ was not found on this server.</p> 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:30
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 11:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:382
参数2:1032
 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-05
参数3:2017-07-05
参数4:9
参数5:2017-07-05
参数6:2017-07-05
参数7:9
参数8:2017-07-05
参数9:2017-07-05
参数10:9
参数11:2017-07-05
参数12:2017-07-05
参数13:9
参数14:2017-07-05
参数15:2017-07-05
参数16:9
参数17:2017-07-05
参数18:2017-07-05
 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-05 11:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-05
参数2:2017-07-05
参数3:9
参数4:2017-07-04
参数5:2017-07-04
参数6:9
参数7:2017-06-28
参数8:2017-06-28
参数9:9
 
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 11:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-05 11:05:29] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: com.alibaba.fastjson.JSONException: syntax error, pos 1, json : <h1>Not Found</h1><p>The requested URL /restaurant/&#39;156059353&#39;/food_categories/ was not found on this server.</p> 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-05 11:05:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-05 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-05 11:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227280992
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227546890
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227537241
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-05 11:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227537242
 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-05 11:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-05 11:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-05 11:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-05 11:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-05 11:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-05 11:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-05 11:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
