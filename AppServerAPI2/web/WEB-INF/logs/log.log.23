[INFO][2017-08-11 16:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:chenbin
 
[INFO][2017-08-11 16:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-11 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:0
 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-08-11
参数3:2017-08-11
参数4:0
参数5:2017-08-11
参数6:2017-08-11
参数7:0
参数8:2017-08-11
参数9:2017-08-11
参数10:0
参数11:2017-08-11
参数12:2017-08-11
参数13:0
参数14:2017-08-11
参数15:2017-08-11
参数16:0
参数17:2017-08-11
参数18:2017-08-11
参数19:0
参数20:2017-08-11
参数21:2017-08-11
参数22:0
参数23:2017-08-11
参数24:2017-08-11
参数25:0
参数26:2017-08-11
参数27:2017-08-11
 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2017-08-11
参数2:2017-08-11
 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-11 16:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-08-11
参数2:2017-08-11
参数3:0
参数4:2017-08-11
参数5:2017-08-11
参数6:0
参数7:2017-08-10
参数8:2017-08-10
参数9:0
参数10:2017-08-10
参数11:2017-08-10
参数12:0
参数13:2017-08-04
参数14:2017-08-04
参数15:0
 
[INFO][2017-08-11 16:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 16:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 16:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 16:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-11 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-11 16:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 16:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-11 16:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-11 16:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 16:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-11 16:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 16:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-11 16:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 16:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 16:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1032
 
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 16:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 17:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 17:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1032
 
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1032
 
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1032
 
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-11 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-11 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 17:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:19:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1032
 
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-11 17:20:00] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 16:39:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:20:00] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-11 17:20:01] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-11 17:20:01] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Aug 11 16:39:07 CST 2017]; root of context hierarchy 
[INFO][2017-08-11 17:20:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-11 17:20:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-11 17:20:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Fri Aug 11 17:20:14 CST 2017]; root of context hierarchy 
[INFO][2017-08-11 17:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-11 17:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-11 17:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-11 17:20:15] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-11 17:20:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-11 17:20:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3458 ms 
[INFO][2017-08-11 17:20:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-11 17:20:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:20:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-11 17:20:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:20:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:20:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:20:22] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-11 17:20:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-11 17:20:22] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51021-1502443222872-1:1,clientId=null,started=false} 
[INFO][2017-08-11 17:20:23] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-11 17:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-11 17:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-11 17:20:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5802 ms 
[WARN][2017-08-11 17:20:29] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:chenbin
 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:351
参数2:1032
 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:352
参数2:1032
 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:375
参数2:1032
 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:380
参数2:1032
 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:353
参数2:1032
 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:376
参数2:1032
 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:372
参数2:1032
 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:354
参数2:1032
 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:355
参数2:1032
 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:356
参数2:1032
 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-11 17:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:0
 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:0
参数2:2017-08-11
参数3:2017-08-11
参数4:0
参数5:2017-08-11
参数6:2017-08-11
参数7:0
参数8:2017-08-11
参数9:2017-08-11
参数10:0
参数11:2017-08-11
参数12:2017-08-11
参数13:0
参数14:2017-08-11
参数15:2017-08-11
参数16:0
参数17:2017-08-11
参数18:2017-08-11
参数19:0
参数20:2017-08-11
参数21:2017-08-11
参数22:0
参数23:2017-08-11
参数24:2017-08-11
参数25:0
参数26:2017-08-11
参数27:2017-08-11
 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-11 17:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-08-11
参数2:2017-08-11
 
[INFO][2017-08-11 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-11 17:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2017-08-11
参数2:2017-08-11
参数3:0
参数4:2017-08-11
参数5:2017-08-11
参数6:0
参数7:2017-08-10
参数8:2017-08-10
参数9:0
参数10:2017-08-10
参数11:2017-08-10
参数12:0
参数13:2017-08-04
参数14:2017-08-04
参数15:0
 
[INFO][2017-08-11 17:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,d.brand_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:20:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-6 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-08-11 17:20:50] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-6 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-08-11 17:20:50] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getGoodsList-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [8156]; 多次为 'tmp_count' 指定了列 'brand_id'。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。 
[INFO][2017-08-11 17:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,d.brand_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 17:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[WARN][2017-08-11 17:20:55] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getGoodsList-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [8156]; 多次为 'tmp_count' 指定了列 'brand_id'。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 多次为 'tmp_count' 指定了列 'brand_id'。 
[INFO][2017-08-11 17:22:21] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:22:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-11 17:22:22] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-11 17:22:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Aug 11 17:20:14 CST 2017]; root of context hierarchy 
[INFO][2017-08-11 17:22:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-08-11 17:22:22] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@51022 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-08-11 17:22:34] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-11 17:22:35] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Fri Aug 11 17:22:35 CST 2017]; root of context hierarchy 
[INFO][2017-08-11 17:22:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-11 17:22:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-11 17:22:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-11 17:22:35] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-11 17:22:37] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-11 17:22:37] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3026 ms 
[INFO][2017-08-11 17:22:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-11 17:22:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:22:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:22:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-11 17:22:39] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-11 17:22:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-11 17:22:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:22:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 17:22:42] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-11 17:22:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-11 17:22:42] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51120-1502443362532-1:1,clientId=null,started=false} 
[INFO][2017-08-11 17:22:42] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-11 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-11 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-11 17:22:43] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5286 ms 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-11 17:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-11 17:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-11 17:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:0
 
[INFO][2017-08-11 17:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-11 17:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:0
参数2:2017-08-11
参数3:2017-08-11
参数4:0
参数5:2017-08-11
参数6:2017-08-11
参数7:0
参数8:2017-08-11
参数9:2017-08-11
参数10:0
参数11:2017-08-11
参数12:2017-08-11
参数13:0
参数14:2017-08-11
参数15:2017-08-11
参数16:0
参数17:2017-08-11
参数18:2017-08-11
参数19:0
参数20:2017-08-11
参数21:2017-08-11
参数22:0
参数23:2017-08-11
参数24:2017-08-11
参数25:0
参数26:2017-08-11
参数27:2017-08-11
 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2017-08-11
参数2:2017-08-11
 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-11 17:22:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-08-11
参数2:2017-08-11
参数3:0
参数4:2017-08-11
参数5:2017-08-11
参数6:0
参数7:2017-08-10
参数8:2017-08-10
参数9:0
参数10:2017-08-10
参数11:2017-08-10
参数12:0
参数13:2017-08-04
参数14:2017-08-04
参数15:0
 
[INFO][2017-08-11 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 17:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[WARN][2017-08-11 17:24:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-11 17:24:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-11 17:24:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-11 17:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:26:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:26:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:26:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:26:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:26:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1032
 
[WARN][2017-08-11 17:28:10] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-11 17:28:10] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-11 17:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:32:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1032
 
[INFO][2017-08-11 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-08-11 17:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-08-11 17:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-08-11 17:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-08-11 17:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-11 17:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 17:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 17:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-11 17:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-11 17:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-08-11 17:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-08-11 17:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:1
 
[INFO][2017-08-11 17:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:1
 
[INFO][2017-08-11 17:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
参数2:3
 
[INFO][2017-08-11 17:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
参数2:3
 
[INFO][2017-08-11 17:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-08-11 17:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-08-11 17:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-08-11 17:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      ) 
[INFO][2017-08-11 17:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-08-11 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:3
 
[INFO][2017-08-11 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
                
                    AND (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:3
 
[INFO][2017-08-11 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-08-11 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-08-11 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-08-11 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 11 and 16 
[INFO][2017-08-11 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 11 and 16 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-08-11 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-08-11 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 11 and 16 
[INFO][2017-08-11 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-08-11 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      ))  tmp_count 
[INFO][2017-08-11 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-08-11 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                         class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-08-11 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-11 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-11 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-08-11 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-08-11 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-08-11 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-08-11 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-08-11 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-08-11 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-08-11 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-11 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-11 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1032
 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-08-11 17:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-08-11 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-08-11 17:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 17:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-08-11 17:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-08-11 17:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 17:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 17:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 17:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 17:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 17:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 17:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 17:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1032
 
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1032
 
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1032
 
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 17:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1032
 
[INFO][2017-08-11 18:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 18:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-11 18:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-08-11 18:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-11 18:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-08-11 18:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-11 18:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-11 18:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-08-11 18:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 18:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 18:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 18:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-08-11 18:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 18:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-08-11 18:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-11 18:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-08-11 18:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-11 18:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 18:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-11 18:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 18:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1032
 
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-11 18:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1032
 
[INFO][2017-08-11 18:11:29] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Aug 11 17:22:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-11 18:11:29] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-11 18:11:30] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-11 18:11:30] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Aug 11 17:22:35 CST 2017]; root of context hierarchy 
[INFO][2017-08-11 18:11:30] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 09:07:35] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 09:07:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 09:07:36 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 09:07:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 09:07:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 09:07:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 09:07:36] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 09:07:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 09:07:39] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 3095 ms 
[INFO][2017-08-12 09:07:39] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 09:07:39] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:07:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 09:07:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 09:07:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:07:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:07:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:07:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 09:07:43] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 09:07:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 09:07:44] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49653-1502500063987-1:1,clientId=null,started=false} 
[INFO][2017-08-12 09:07:44] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 09:07:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 09:07:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 09:07:45] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5928 ms 
[INFO][2017-08-12 09:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 09:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-12 09:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 09:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-12 09:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 09:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 09:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:
 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:09:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:09:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:09:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:09:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:09:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 09:09:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:09:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 09:09:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:09:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:09:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:09:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[ERROR][2017-08-12 09:09:43] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-5 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:09:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[ERROR][2017-08-12 09:10:06] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-7 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:10:42] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:13:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[ERROR][2017-08-12 09:13:42] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-8 Invalid index value 'good_id' 
[WARN][2017-08-12 09:13:48] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:13:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[ERROR][2017-08-12 09:13:51] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-2 Invalid index value 'good_id' 
[WARN][2017-08-12 09:14:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[ERROR][2017-08-12 09:15:29] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-4 Invalid index value 'good_id' 
[WARN][2017-08-12 09:16:29] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:16:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:16:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:16:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:16:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:16:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:16:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[ERROR][2017-08-12 09:16:41] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-5 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:17:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[ERROR][2017-08-12 09:17:22] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-10 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:17:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:17:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:17:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:17:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:17:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[ERROR][2017-08-12 09:17:56] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-1 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:18:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 09:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:18:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:18:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:18:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:18:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:18:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:18:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:18:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:18:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[ERROR][2017-08-12 09:21:13] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-10 Indexed or mapped properties are not supported on objects of type Map: standard_good_list[0] 
[WARN][2017-08-12 09:22:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 09:27:52] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:07:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 09:27:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 09:27:53] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 09:27:53] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 09:07:36 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 09:27:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 09:28:06] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 09:28:06] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 09:28:06 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 09:28:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 09:28:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 09:28:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 09:28:07] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 09:28:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 09:28:09] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2731 ms 
[INFO][2017-08-12 09:28:09] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 09:28:09] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:28:09 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 09:28:09] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 09:28:11] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 09:28:12] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 09:28:13] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:28:09 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 09:28:13] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 09:28:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 09:28:13] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50205-1502501293652-1:1,clientId=null,started=false} 
[INFO][2017-08-12 09:28:13] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 09:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 09:28:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 09:28:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5176 ms 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 09:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 09:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 09:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 09:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:29:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_good_list(
          
            standard_id
         , 
            good_id
         , 
            good_count
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 09:29:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:5
参数3:1
 
[INFO][2017-08-12 09:29:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:29:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 09:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 09:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:30:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:30:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:30:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:30:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 09:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 09:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:33:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 09:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:34:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:34:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:34:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:34:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:34:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:34:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 09:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:37:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 09:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 09:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:46:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:46:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:46:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:46:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 09:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:chenbin
 
[INFO][2017-08-12 09:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:351
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:352
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:375
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:380
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:353
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:376
参数2:1032
 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:372
参数2:1032
 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:354
参数2:1032
 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:355
参数2:1032
 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:356
参数2:1032
 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 09:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 09:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 09:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 09:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 09:54:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 09:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 09:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 09:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 09:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 09:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 09:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 10:03:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 09:28:09 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:03:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 10:03:46] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 10:03:46] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 09:28:06 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 10:03:46] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-08-12 10:03:46] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@50206 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-08-12 10:04:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 10:04:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 10:04:00 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 10:04:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 10:04:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 10:04:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 10:04:01] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 10:04:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 10:04:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2668 ms 
[INFO][2017-08-12 10:04:03] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 10:04:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:04:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:04:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 10:04:05] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:04:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:04:08] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:04:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:04:08] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 10:04:08] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 10:04:09] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52148-1502503448903-1:1,clientId=null,started=false} 
[INFO][2017-08-12 10:04:09] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 10:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 10:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 10:04:10] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 6748 ms 
[INFO][2017-08-12 10:04:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 10:04:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 10:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 10:04:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 10:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:04:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:04:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:04:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:04:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:04:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:04:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:04:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:04:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
参数2:74
 
[INFO][2017-08-12 10:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:04:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
参数2:79
 
[INFO][2017-08-12 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:78
 
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:4
参数2:76
 
[INFO][2017-08-12 10:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
参数2:74
 
[INFO][2017-08-12 10:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:06:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:06:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:78
 
[INFO][2017-08-12 10:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:4
参数2:79
 
[INFO][2017-08-12 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:78
 
[INFO][2017-08-12 10:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:07:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:07:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:07:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:07:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:78
 
[INFO][2017-08-12 10:07:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
参数2:79
 
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:07:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:07:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:07:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:07:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:07:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
参数2:74
 
[INFO][2017-08-12 10:07:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
参数2:76
 
[INFO][2017-08-12 10:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
参数2:79
 
[INFO][2017-08-12 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:78
 
[INFO][2017-08-12 10:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:08:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:08:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-12 10:08:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:08:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:08:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 10:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:08:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
参数2:74
 
[INFO][2017-08-12 10:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:4
参数2:76
 
[INFO][2017-08-12 10:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
参数2:76
 
[INFO][2017-08-12 10:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:09:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
参数2:74
 
[INFO][2017-08-12 10:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:09:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:09:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
参数2:74
 
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-12 10:13:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:13:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:13:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 10:14:26] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:04:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:14:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 10:14:27] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 10:14:27] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 10:04:00 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 10:14:27] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 10:14:39] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 10:14:39] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 10:14:39 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 10:14:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 10:14:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 10:14:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 10:14:40] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 10:14:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 10:14:42] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2699 ms 
[INFO][2017-08-12 10:14:42] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 10:14:42] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:14:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:14:42] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 10:14:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 10:14:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 10:14:46] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:14:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 10:14:46] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 10:14:46] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 10:14:47] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52944-1502504086919-1:1,clientId=null,started=false} 
[INFO][2017-08-12 10:14:47] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 10:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 10:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 10:14:47] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5254 ms 
[WARN][2017-08-12 10:14:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 10:15:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 10:15:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:chenbin
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:351
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:352
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:375
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:380
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:353
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:376
参数2:1032
 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:372
参数2:1032
 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:354
参数2:1032
 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:355
参数2:1032
 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:356
参数2:1032
 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 10:15:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 10:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 10:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:17:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_good_list
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:78
 
[INFO][2017-08-12 10:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:18:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:18:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 10:18:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:18:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 10:18:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:18:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:18:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:18:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[WARN][2017-08-12 10:18:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:18:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 10:18:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 10:18:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 10:18:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:chenbin
 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:351
参数2:1032
 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:352
参数2:1032
 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:375
参数2:1032
 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:380
参数2:1032
 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:353
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:376
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:372
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:354
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:355
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:356
参数2:1032
 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 10:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 10:19:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:19:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:19:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:19:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:77
 
[INFO][2017-08-12 10:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 10:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 10:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
参数2:76
 
[INFO][2017-08-12 10:20:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 10:20:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:4
参数2:74
 
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:20:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:20:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:21:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:21:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:21:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:21:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:21:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:21:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:21:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:21:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:21:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:21:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:21:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:21:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:22:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:22:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:22:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 10:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:28:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:28:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:28:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:28:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:28:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:28:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:30:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 10:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:34:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 10:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:35:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:36:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:36:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:36:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:36:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:37:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:37:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:37:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:41:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:41:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:41:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:42:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:46:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 10:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 10:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:46:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:46:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:46:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:46:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 10:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 10:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:50:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 10:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:10:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 11:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 11:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[ERROR][2017-08-12 11:14:10] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-5 Indexed or mapped properties are not supported on objects of type Map: standard[0] 
[WARN][2017-08-12 11:14:10] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'erp_good_id' is not present 
[INFO][2017-08-12 11:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 11:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 11:14:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:14:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:undefined
 
[INFO][2017-08-12 11:14:16] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-80-exec-6 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-08-12 11:14:16] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-80-exec-6 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-08-12 11:14:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 11:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 11:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:20:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 11:23:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 10:14:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 11:23:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 11:23:45] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 11:23:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 10:14:39 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 11:23:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 11:23:57] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 11:23:57] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 11:23:57 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 11:23:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 11:23:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 11:23:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 11:23:57] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 11:24:00] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 11:24:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2770 ms 
[INFO][2017-08-12 11:24:00] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 11:24:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 11:24:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 11:24:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 11:24:01] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 11:24:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 11:24:04] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 11:24:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 11:24:04] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 11:24:05] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 11:24:05] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-57569-1502508245204-1:1,clientId=null,started=false} 
[INFO][2017-08-12 11:24:05] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 11:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 11:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 11:24:05] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5785 ms 
[WARN][2017-08-12 11:24:13] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:24:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 11:24:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:chenbin
 
[INFO][2017-08-12 11:24:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:351
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:352
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:375
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:380
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:353
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:376
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:372
参数2:1032
 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:354
参数2:1032
 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:355
参数2:1032
 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:356
参数2:1032
 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 11:24:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 11:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 11:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 11:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 11:24:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[ERROR][2017-08-12 11:24:59] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-2 Indexed or mapped properties are not supported on objects of type Map: standard[0] 
[WARN][2017-08-12 11:24:59] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'erp_good_id' is not present 
[INFO][2017-08-12 11:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 11:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 11:25:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:25:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 11:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 11:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 11:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[ERROR][2017-08-12 11:27:02] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-4 Indexed or mapped properties are not supported on objects of type Map: standard[0] 
[WARN][2017-08-12 11:27:02] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'erp_good_id' is not present 
[INFO][2017-08-12 11:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 11:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 11:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 11:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[WARN][2017-08-12 11:29:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:29:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:29:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[ERROR][2017-08-12 11:29:11] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-3 Indexed or mapped properties are not supported on objects of type Map: standard[0] 
[INFO][2017-08-12 11:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 11:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[WARN][2017-08-12 11:29:24] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:29:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[WARN][2017-08-12 11:34:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:34:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:34:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[WARN][2017-08-12 11:39:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:39:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:39:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:undefined
 
[INFO][2017-08-12 11:39:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-80-exec-4 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-08-12 11:39:32] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-80-exec-4 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-08-12 11:39:32] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 11:39:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:39:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 11:39:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 11:39:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 11:39:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 11:39:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:undefined
 
[WARN][2017-08-12 11:39:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 11:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 11:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 11:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 11:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 11:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 11:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 11:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 11:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 11:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 11:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-12 11:41:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 11:44:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:44:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:44:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[WARN][2017-08-12 11:45:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 11:45:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 11:49:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:49:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:49:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[WARN][2017-08-12 11:54:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:54:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:54:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-12 11:59:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:59:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 11:59:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 11:59:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[WARN][2017-08-12 12:04:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 12:04:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 12:04:00] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:08:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:08:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[ERROR][2017-08-12 12:08:54] com.framework.util.BeanUtil.createBean(BeanUtil.java:43) http-nio-80-exec-10 Indexed or mapped properties are not supported on objects of type Map: standard[0] 
[INFO][2017-08-12 12:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 12:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[WARN][2017-08-12 12:09:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 12:09:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 12:09:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 12:09:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:09:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:undefined
 
[WARN][2017-08-12 12:11:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 12:12:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:12:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:12:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:12:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
参数2:0
参数3:1
参数4:
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[WARN][2017-08-12 12:12:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 12:12:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 12:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 12:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 12:13:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:13:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:14:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:14:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:4
参数2:0
参数3:1
参数4:中份
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 12:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 12:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 12:14:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:14:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:14:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:16:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 12:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 12:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 12:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:22:16] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 11:24:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 12:22:16] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 12:22:16] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 12:22:16] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 11:23:57 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 12:22:16] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 12:22:28] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 12:22:28] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 12:22:28 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 12:22:28] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 12:22:28] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 12:22:28] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 12:22:29] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 12:22:31] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 12:22:31] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2552 ms 
[INFO][2017-08-12 12:22:31] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 12:22:31] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 12:22:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 12:22:31] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 12:22:32] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:33] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 12:22:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 12:22:35] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 12:22:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 12:22:35] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 12:22:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 12:22:35] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59619-1502511755566-1:1,clientId=null,started=false} 
[INFO][2017-08-12 12:22:35] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 12:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 12:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 12:22:36] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5209 ms 
[INFO][2017-08-12 12:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 12:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:chenbin
 
[INFO][2017-08-12 12:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:351
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:352
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:375
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:380
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:353
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:376
参数2:1032
 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:372
参数2:1032
 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:354
参数2:1032
 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:355
参数2:1032
 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:356
参数2:1032
 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 12:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 12:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 12:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:24:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:24:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:24:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:24:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:4
参数2:0
参数3:1
参数4:中份
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 12:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:24:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:4
 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 12:24:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:24:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_good_list
         WHERE erp_good_id = ? 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:76
 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:25:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:25:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 12:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 12:28:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:28:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:28:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:28:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_standard_list
         SET good_id = ?
            ,
                sgl_id = ?
            ,
                standard_name = ?
            ,
                market_price = ?
            ,
                current_price = ?
            ,
                standard_desc = ?
            ,
                count = ?
            ,
                box_price = ?
            ,
                mt_count = ?
            ,
                elem_count = ?
            ,
                box_count = ?
            ,
                listorder = ? 
         WHERE standard_id = ? 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:1
参数3:中份
参数4:0.0
参数5:0.0
参数6:null
参数7:0
参数8:1.0
参数9:0
参数10:0
参数11:1
参数12:0
参数13:3
 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 12:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 12:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:28:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:28:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:28:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 12:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:28:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 12:28:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:28:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:28:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:28:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:29:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:4
参数2:0
参数3:1
参数4:
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:29:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:29:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:29:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:29:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:29:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:29:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:29:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:29:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
参数2:0
参数3:1
参数4:
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 12:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:31:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:4
 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:4
 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 12:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 12:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:4
参数2:0
参数3:1
参数4:
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 12:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:4
 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 12:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 12:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 12:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 12:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 12:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 12:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 12:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 12:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 12:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 12:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 12:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 12:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:undefined
 
[INFO][2017-08-12 13:01:59] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-80-exec-3 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-08-12 13:01:59] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-80-exec-3 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-08-12 13:01:59] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:undefined
 
[WARN][2017-08-12 13:01:59] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:09:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:32:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:32:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:32:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:32:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:32:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 13:32:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:32:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 13:33:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:33:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:33:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:33:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:33:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 13:33:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:33:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 13:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 13:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:39:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:39:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 13:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:44:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:undefined
 
[WARN][2017-08-12 13:44:59] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 13:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:46:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 13:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 13:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 13:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 13:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 13:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 13:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 13:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:48:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:48:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:48:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 13:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:48:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 13:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 13:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 13:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:50:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:50:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 13:50:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:50:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 13:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 13:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 13:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 13:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:undefined
 
[WARN][2017-08-12 13:55:38] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:56:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:56:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:56:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:56:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:56:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:undefined
 
[WARN][2017-08-12 13:56:30] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:undefined
 
[WARN][2017-08-12 13:56:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 13:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:undefined
 
[WARN][2017-08-12 13:57:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:undefined
 
[WARN][2017-08-12 13:57:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 13:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 13:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:undefined
 
[WARN][2017-08-12 13:57:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:undefined
 
[WARN][2017-08-12 13:57:16] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:57:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:undefined
 
[WARN][2017-08-12 13:57:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 13:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 13:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 13:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 13:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 13:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 13:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 13:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 13:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 13:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 13:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:undefined
 
[WARN][2017-08-12 13:58:39] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 13:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:undefined
 
[WARN][2017-08-12 13:58:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.getStandardGoods-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 'undefined' 转换成数据类型 int 时失败。 
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 14:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 14:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 14:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 14:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 14:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:06:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:06:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:06:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:06:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:06:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 14:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:3
 
[INFO][2017-08-12 14:07:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:07:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 14:07:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
参数2:0
参数3:1
参数4:打中得分
参数5:0.0
参数6:1.0
参数7:null
参数8:1
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 14:07:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:07:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:07:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:07:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:07:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:07:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:07:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:07:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:07:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:4
 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 14:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
参数2:0
参数3:1
参数4:打中得分
参数5:0.0
参数6:1.0
参数7:null
参数8:1
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 14:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:08:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:08:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 14:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:12:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:12:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 14:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 14:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 14:12:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:4
参数2:0
参数3:1
参数4:
参数5:0.0
参数6:0.0
参数7:null
参数8:0
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 14:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 14:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:4
 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:4
 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:13:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:19:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:19:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:29:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:33:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:34:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:34:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:34:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:34:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:35:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:37:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:37:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:37:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:37:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:37:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:37:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:37:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:39:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:39:52] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 12:22:31 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 14:39:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 14:39:53] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 14:39:53] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 12:22:28 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 14:39:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 14:40:05] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 14:40:05] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 14:40:05 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 14:40:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 14:40:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 14:40:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 14:40:06] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 14:40:08] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 14:40:08] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2855 ms 
[INFO][2017-08-12 14:40:08] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 14:40:08] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 14:40:08 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 14:40:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 14:40:10] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 14:40:11] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 14:40:12] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 14:40:08 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 14:40:12] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 14:40:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 14:40:13] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-54112-1502520013106-1:1,clientId=null,started=false} 
[INFO][2017-08-12 14:40:13] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 14:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 14:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 14:40:13] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5188 ms 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 14:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-12 14:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 14:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-12 14:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 14:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 14:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 14:40:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:40:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:大米
参数2:29
 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:100.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米
参数23:goodimg/HtJr6kFjwM.jpg
参数24:goodimg/55JtfbZYxR.jpg
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:48:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:49:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:49:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:49:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:49:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:49:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:49:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:49:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-12 14:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-08-12 14:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 14:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:53:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:53:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 14:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 14:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:54:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 14:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 14:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 14:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:56:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:56:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:56:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:56:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 14:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:3
 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:56:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 14:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 14:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 14:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-12 14:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-12 14:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:58:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 14:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 14:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 14:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 14:58:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 14:58:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:00:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 15:00:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:00:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 15:00:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:00:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:3
 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:4
参数2:0
参数3:1
参数4:打打分
参数5:0.0
参数6:1.0
参数7:null
参数8:1
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 15:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 15:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 15:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:4
 
[INFO][2017-08-12 15:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 15:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:4
 
[INFO][2017-08-12 15:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:4
 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:4
 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.queryStandardId: 
select  max(standard_id) AS standard_id from cds_standard_list 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_standard_list(
          
            standard_id
         , 
            good_id
         , 
            sgl_id
         , 
            standard_name
         , 
            market_price
         , 
            current_price
         , 
            standard_desc
         , 
            count
         , 
            box_price
         , 
            mt_count
         , 
            elem_count
         , 
            box_count
         , 
            listorder
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:4
参数2:0
参数3:1
参数4:打断点
参数5:0.0
参数6:1.0
参数7:null
参数8:1
参数9:1.0
参数10:0
参数11:0
参数12:1
参数13:0
 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-12 15:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.deleteRecord: 
DELETE FROM cds_standard_list
         WHERE standard_id = ? 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:4
 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:4
 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:4
 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 15:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-12 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 15:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:3
 
[INFO][2017-08-12 15:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 15:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardGoods: 
select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ? 
[INFO][2017-08-12 15:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-12 15:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 15:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 15:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_standard_good_list
         SET good_count = ? 
         WHERE erp_good_id = ? 
[INFO][2017-08-12 15:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:3
参数2:75
 
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 15:04:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:04:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 15:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:04:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:15:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:19:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:19:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:24:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:24:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:24:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 15:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:27:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:27:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:27:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:27:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:30:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:33:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:33:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:33:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 15:33:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:33:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 15:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 15:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 15:39:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 15:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 15:41:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:42:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:42:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:43:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:43:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:43:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:43:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:43:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 15:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:50:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:50:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 15:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 15:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 15:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 15:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 15:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 15:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 15:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 15:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 15:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 15:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 15:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 16:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 16:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 16:04:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:04:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:04:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:04:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:04:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:04:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:04:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:04:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:04:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:04:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:05:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:06:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:07:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:07:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:07:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:09:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-12 16:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 16:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-12 16:09:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-12 16:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 16:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-12 16:09:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 16:09:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 16:09:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 16:09:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[WARN][2017-08-12 16:09:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-12 16:09:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-12 16:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:09:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:09:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:09:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:09:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:09:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-12 16:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:11:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:12:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:13:12] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 14:40:08 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:13:12] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 16:13:13] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 16:13:13] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 14:40:05 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 16:13:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 16:13:24] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 16:13:24] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 16:13:24 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 16:13:24] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 16:13:25] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 16:13:25] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 16:13:25] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 16:13:27] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 16:13:27] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 2852 ms 
[INFO][2017-08-12 16:13:27] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 16:13:27] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:13:27 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:13:27] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 16:13:29] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:13:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:13:27 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:13:32] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 16:13:33] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 16:13:33] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-57742-1502525613117-1:1,clientId=null,started=false} 
[INFO][2017-08-12 16:13:33] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 16:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 16:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 16:13:33] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 6273 ms 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 16:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-12 16:14:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 16:14:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:14:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 16:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[WARN][2017-08-12 16:15:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 16:15:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 16:15:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-12 16:17:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-12 16:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 16:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:18:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:18:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:18:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:18:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-12 16:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:24:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 16:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 16:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 16:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:26:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-12 16:26:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:26:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-12 16:26:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:40:55] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:13:27 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:40:55] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 16:40:56] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 16:40:56] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 16:13:24 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 16:40:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 16:41:13] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 16:41:13] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 16:41:13 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 16:41:13] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 16:41:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 16:41:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 16:41:14] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 16:41:16] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 16:41:16] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 3109 ms 
[INFO][2017-08-12 16:41:16] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 16:41:16] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:41:16 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:41:16] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 16:41:18] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:41:19] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 16:41:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 16:41:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:41:16 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 16:41:21] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 16:41:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 16:41:21] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-58436-1502527281704-1:1,clientId=null,started=false} 
[INFO][2017-08-12 16:41:21] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 16:41:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 16:41:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 16:41:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5523 ms 
[INFO][2017-08-12 16:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 16:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-12 16:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 16:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-12 16:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 16:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 16:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 16:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 16:48:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 16:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 16:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 16:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 16:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-12 16:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-12 16:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 16:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:13
 
[INFO][2017-08-12 16:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ) 
[INFO][2017-08-12 16:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:13
 
[INFO][2017-08-12 16:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 16:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-12 16:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 16:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 16:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 17:00:16] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 16:41:16 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 17:00:16] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 17:00:17] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 17:00:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 16:41:13 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 17:00:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 17:00:33] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 17:00:33] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 17:00:33 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 17:00:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 17:00:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 17:00:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 17:00:34] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 17:00:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 17:00:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 4231 ms 
[INFO][2017-08-12 17:00:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 17:00:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 17:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 17:00:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 17:00:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 17:00:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 17:00:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 17:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 17:00:44] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 17:00:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 17:00:45] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-58695-1502528444908-1:1,clientId=null,started=false} 
[INFO][2017-08-12 17:00:45] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 17:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 17:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 17:00:46] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 7892 ms 
[INFO][2017-08-12 17:00:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 17:00:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-08-12 17:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-08-12 17:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:375
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:380
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 17:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
 
[INFO][2017-08-12 17:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 17:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 17:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 17:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 17:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 17:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:01:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 17:09:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:09:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:09:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:09:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:09:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:09:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:09:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:11:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:11:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:11:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:12:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:12:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:12:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:12:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:12:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:15
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:12:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 17:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 17:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-12 17:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


          
         
            ORDER BY stores_class_id 
[INFO][2017-08-12 17:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 17:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_standard_list
         SET good_id = ?
            ,
                sgl_id = ?
            ,
                standard_name = ?
            ,
                market_price = ?
            ,
                current_price = ?
            ,
                standard_desc = ?
            ,
                count = ?
            ,
                box_price = ?
            ,
                mt_count = ?
            ,
                elem_count = ?
            ,
                box_count = ?
            ,
                listorder = ? 
         WHERE standard_id = ? 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:1
参数3:大份
参数4:0.0
参数5:10.0
参数6:null
参数7:1
参数8:1.0
参数9:0
参数10:0
参数11:1
参数12:0
参数13:1
 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-12 17:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:16:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:16:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:16:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:16:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:16:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:20:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:22:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 17:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:24:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 17:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-12 17:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 17:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-12 17:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ) 
[INFO][2017-08-12 17:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-12 17:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 17:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:12
 
[INFO][2017-08-12 17:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ) 
[INFO][2017-08-12 17:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:12
 
[INFO][2017-08-12 17:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 17:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 17:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 17:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 17:40:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 17:40:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:40:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:40:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 17:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 17:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-12 17:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 17:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-12 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-12 18:04:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 17:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 18:04:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 18:04:17] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-12 18:04:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Aug 12 17:00:33 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 18:04:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-12 18:09:19] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-12 18:09:19] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Aug 12 18:09:19 CST 2017]; root of context hierarchy 
[INFO][2017-08-12 18:09:19] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-12 18:09:19] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-12 18:09:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-12 18:09:20] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-12 18:09:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 18:09:22] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 3421 ms 
[INFO][2017-08-12 18:09:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-12 18:09:22] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 18:09:22 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 18:09:22] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-12 18:09:24] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-12 18:09:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-12 18:09:27] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Aug 12 18:09:22 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-12 18:09:27] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-12 18:09:28] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-12 18:09:28] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49321-1502532568279-1:1,clientId=null,started=false} 
[INFO][2017-08-12 18:10:21] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-12 18:10:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-12 18:10:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-12 18:10:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 59523 ms 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:375
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:380
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-12 18:10:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-12
参数2:2017-08-12
 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-12
参数3:2017-08-12
参数4:0
参数5:2017-08-12
参数6:2017-08-12
参数7:0
参数8:2017-08-12
参数9:2017-08-12
参数10:0
参数11:2017-08-12
参数12:2017-08-12
参数13:0
参数14:2017-08-12
参数15:2017-08-12
参数16:0
参数17:2017-08-12
参数18:2017-08-12
参数19:0
参数20:2017-08-12
参数21:2017-08-12
参数22:0
参数23:2017-08-12
参数24:2017-08-12
参数25:0
参数26:2017-08-12
参数27:2017-08-12
 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-12 18:10:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-12
参数2:2017-08-12
参数3:0
参数4:2017-08-12
参数5:2017-08-12
参数6:0
参数7:2017-08-11
参数8:2017-08-11
参数9:0
参数10:2017-08-11
参数11:2017-08-11
参数12:0
参数13:2017-08-05
参数14:2017-08-05
参数15:0
 
[INFO][2017-08-12 18:11:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-12 18:11:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-12 18:11:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-12 18:11:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-12 18:11:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 18:11:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 18:11:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 18:11:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-12 18:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
参数2:测试-五谷杂粮
 
[INFO][2017-08-12 18:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-12 18:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-12 18:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-12 18:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
